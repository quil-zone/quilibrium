---
name: publish
on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+(-[0-9a-f]{7})?'
jobs:
  artifact-build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
    env:
      CARGO_TERM_COLOR: always
    steps:
      -
        name: source fetch
        uses: actions/checkout@v4
      -
        name: read version
        run: |
          echo "GIT_TAG=${{ github.ref_name }}" >> $GITHUB_ENV
          echo "SHORT_GIT_SHA=$(echo $GITHUB_SHA | cut -c 1-7)" >> $GITHUB_ENV
          echo "QUILIBRIUM_VERSION=$(cat ${GITHUB_WORKSPACE}/node/config/version.go | grep -A 1 'func GetVersion() \[\]byte {' | grep -Eo '0x[0-9a-fA-F]+' | xargs printf '%d.%d.%d')" >> $GITHUB_ENV
      -
        name: log version
        run: |
          echo "git tag: ${GIT_TAG}"
          echo "short git sha: ${SHORT_GIT_SHA}"
          echo "quilibrim version: ${QUILIBRIUM_VERSION}"
      -
        name: go setup
        uses: actions/setup-go@v5
        with:
          go-version: '1.21.x'
      -
        name: dependency setup for macos
        if: matrix.os == 'macos-latest'
        run: |
          brew install gmp
          go install github.com/fullstorydev/grpcurl/cmd/grpcurl@v1.9.1
          cargo install \
            uniffi-bindgen-go \
            --git https://github.com/NordSecurity/uniffi-bindgen-go \
            --tag v0.2.1+v0.25.0
      -
        name: dependency setup for ubuntu
        if: matrix.os == 'ubuntu-latest'
        env:
          RUSTFLAGS: -L /usr/lib/x86_64-linux-gnu
        run: |
          sudo apt-get install libgmp-dev
          go install github.com/fullstorydev/grpcurl/cmd/grpcurl@v1.9.1
          cargo install \
            uniffi-bindgen-go \
            --git https://github.com/NordSecurity/uniffi-bindgen-go \
            --tag v0.2.1+v0.25.0
      -
        name: rust builds for macos
        if: matrix.os == 'macos-latest'
        env:
          RUSTFLAGS: -L /opt/homebrew/Cellar/gmp/6.3.0/lib
        run: |
          cargo build --package vdf --release
          cargo build --package bls48581 --release
      -
        name: rust builds for ubuntu
        if: matrix.os == 'ubuntu-latest'
        env:
          RUSTFLAGS: -L /usr/lib/x86_64-linux-gnu
        run: |
          cargo build --package bls48581 --release
          cargo build --package vdf --release
      -
        name: bls48581 go bindings generation
        run: |
          pushd ${GITHUB_WORKSPACE}/crates/bls48581
          uniffi-bindgen-go ${GITHUB_WORKSPACE}/crates/bls48581/src/lib.udl -o ${GITHUB_WORKSPACE}/bls48581/generated
      -
        name: vdf go bindings generation
        run: |
          pushd ${GITHUB_WORKSPACE}/crates/vdf
          uniffi-bindgen-go ${GITHUB_WORKSPACE}/crates/vdf/src/lib.udl -o ${GITHUB_WORKSPACE}/vdf/generated
      -
        name: node build for macos
        if: matrix.os == 'macos-latest'
        env:
          CGO_ENABLED: 1
        run: |
          pushd ${GITHUB_WORKSPACE}/node
          go build -ldflags "-linkmode 'external' -extldflags '-L${GITHUB_WORKSPACE}/target/release -lvdf -lbls48581 -ldl -lm'" -o ${GITHUB_WORKSPACE}/quilibrium-${GIT_TAG}-darwin-arm64
          openssl sha3-256 -out ${GITHUB_WORKSPACE}/quilibrium-${GIT_TAG}-darwin-arm64.dgst ${GITHUB_WORKSPACE}/quilibrium-${GIT_TAG}-darwin-arm64
      -
        name: node build for ubuntu
        if: matrix.os == 'ubuntu-latest'
        env:
          CGO_ENABLED: 1
        run: |
          pushd ${GITHUB_WORKSPACE}/node
          go build -ldflags "-linkmode 'external' -extldflags '-L${GITHUB_WORKSPACE}/target/release -Wl,-Bstatic -lvdf -lbls48581 -Wl,-Bdynamic -ldl -lm'" -o ${GITHUB_WORKSPACE}/quilibrium-${GIT_TAG}-linux-amd64
          openssl sha3-256 -out ${GITHUB_WORKSPACE}/quilibrium-${GIT_TAG}-linux-amd64.dgst ${GITHUB_WORKSPACE}/quilibrium-${GIT_TAG}-linux-amd64
      - name: publish
        uses: softprops/action-gh-release@v2
        with:
          files: |
            quilibrium-${GIT_TAG}-darwin-arm64
            quilibrium-${GIT_TAG}-darwin-arm64.dgst
            quilibrium-${GIT_TAG}-linux-amd64
            quilibrium-${GIT_TAG}-linux-amd64.dgst
